{"ast":null,"code":"var _jsxFileName = \"/Users/ewanallison/Desktop/webDev2CW2/SMirror/Front/SMirror/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 60000); // Update the date and time every minute\n\n    return () => {\n      clearInterval(timer); // Clear the interval when the component unmounts\n    };\n  }, []);\n\n  // Format options for displaying the time with AM/PM but without seconds\n  const timeFormatOptions = {\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n\n  // Format options for displaying the date as number and month in text\n  const dateFormatOptions = {\n    day: 'numeric',\n    month: 'long'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userDetectionField\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dateTimeModule\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: currentDateTime.toLocaleTimeString([], timeFormatOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: currentDateTime.toLocaleDateString([], dateFormatOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BKM6svc5X+6Po/HP9ygVfqubEbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","currentDateTime","setCurrentDateTime","Date","timer","setInterval","clearInterval","timeFormatOptions","hour","minute","dateFormatOptions","day","month","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/ewanallison/Desktop/webDev2CW2/SMirror/Front/SMirror/src/App.js"],"sourcesContent":["import './App.scss';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [currentDateTime, setCurrentDateTime] = useState(new Date());\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentDateTime(new Date());\n    }, 60000); // Update the date and time every minute\n\n    return () => {\n      clearInterval(timer); // Clear the interval when the component unmounts\n    };\n  }, []);\n\n  // Format options for displaying the time with AM/PM but without seconds\n  const timeFormatOptions = {\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n\n  // Format options for displaying the date as number and month in text\n  const dateFormatOptions = {\n    day: 'numeric',\n    month: 'long'\n  };\n\n  return (\n    <div className=\"App\">\n      <div className='userDetectionField'></div>\n      <section className='dateTimeModule'>\n        <h1>{currentDateTime.toLocaleTimeString([], timeFormatOptions)}</h1> {/* Display current time with AM/PM */}\n        <h2>{currentDateTime.toLocaleDateString([], dateFormatOptions)}</h2> {/* Display date as number and month in text */}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAElEP,SAAS,CAAC,MAAM;IACd,MAAMQ,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BH,kBAAkB,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAChC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAM;MACXG,aAAa,CAACF,KAAK,CAAC,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,iBAAiB,GAAG;IACxBC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACV,CAAC;;EAED;EACA,MAAMC,iBAAiB,GAAG;IACxBC,GAAG,EAAE,SAAS;IACdC,KAAK,EAAE;EACT,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBhB,OAAA;MAAKe,SAAS,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC1CpB,OAAA;MAASe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBACjChB,OAAA;QAAAgB,QAAA,EAAKb,eAAe,CAACkB,kBAAkB,CAAC,EAAE,EAAEZ,iBAAiB;MAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,eACrEpB,OAAA;QAAAgB,QAAA,EAAKb,eAAe,CAACmB,kBAAkB,CAAC,EAAE,EAAEV,iBAAiB;MAAC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAAClB,EAAA,CAlCQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAoCZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}