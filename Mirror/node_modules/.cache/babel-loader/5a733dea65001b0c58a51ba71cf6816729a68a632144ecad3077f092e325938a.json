{"ast":null,"code":"var _jsxFileName = \"/Users/ewanallison/Desktop/webDev2CW2/SMirror/Front/SMirror/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst OceanGame = () => {\n  _s();\n  const popAudio = new Audio(popSound);\n\n  // Function to play the popping sound\n  const playPopSound = () => {\n    popAudio.loop = false;\n    popAudio.play();\n  };\n  useEffect(() => {\n    const spawnFish = () => {\n      const fishImage = document.createElement('img');\n      fishImage.src = fishImages[Math.floor(Math.random() * fishImages.length)];\n      fishImage.className = 'fish';\n\n      // Generate random position within sea4 div boundaries\n      const sea4Div = document.getElementById('sea4');\n      const maxX = sea4Div.clientWidth - fishImage.width;\n      const maxY = sea4Div.clientHeight - fishImage.height;\n      const randomX = Math.random() * maxX;\n      const randomY = Math.random() * maxY;\n      fishImage.style.left = `${randomX}px`;\n      fishImage.style.top = `${randomY}px`;\n      sea4Div.appendChild(fishImage);\n      const randomAnimationDuration = `${Math.random() * 20 + 2}s`;\n      fishImage.style.setProperty('--animation-duration', randomAnimationDuration);\n      fishImage.addEventListener('animationiteration', () => {\n        fishImage.classList.toggle('flip');\n      });\n      fishImage.addEventListener('click', () => {\n        fishImage.style.animation = 'fishSwimAway 0.5s linear';\n        fishImage.addEventListener('animationend', () => {\n          fishImage.remove();\n        });\n      });\n    };\n\n    // Array containing imported fish images\n    const fishImages = [fish1, fish2, fish3, fish4, fish5, fish6];\n\n    // Populate fish dynamically to the sea4 div\n    for (let i = 0; i < 10; i++) {\n      spawnFish();\n    }\n\n    //Sea parralax effect\n\n    const updateElementsPosition = () => {\n      const sea1 = document.getElementById(\"sea1\");\n      const sea2 = document.getElementById(\"sea2\");\n      const sea3 = document.getElementById(\"sea3\");\n      const ship = document.getElementById(\"ship\");\n      if (sea1 && sea2 && sea3 && ship) {\n        const offsetY = window.pageYOffset;\n        sea1.style.top = `${400 + (offsetY - 400) * 0.3}px`;\n        sea2.style.top = `${400 + (offsetY - 400) * 0.2}px`;\n        sea3.style.top = `${400 + (offsetY - 400) * 0.1}px`;\n        ship.style.top = `${50 + (offsetY - 50) * 0.05}px`;\n      }\n      requestAnimationFrame(updateElementsPosition);\n    };\n    requestAnimationFrame(updateElementsPosition);\n\n    // Your JavaScript code that should run after component render\n    const canvasElement = document.querySelector('canvas');\n    canvasElement.width = document.body.clientWidth;\n    canvasElement.height = document.body.clientHeight;\n    const ctx = canvasElement.getContext('2d');\n    const count = canvasElement.height;\n    const bubbles = [];\n    const bubbleCount = 50;\n    const bubbleSpeed = 1;\n    const popLines = 6;\n    let popDistance = 40;\n    const mouseOffset = {\n      x: 0,\n      y: 0\n    };\n\n    // Bubble Constructor\n    function createBubble() {\n      this.position = {\n        x: 0,\n        y: 0\n      };\n      this.radius = Math.floor(Math.random() * (71 - 40 + 1)) + 40;\n      this.xOff = Math.random() * canvasElement.width - this.radius;\n      this.yOff = Math.random() * canvasElement.height;\n      this.distanceBetweenWaves = 100 + Math.random() * 40;\n      this.count = canvasElement.height + this.yOff;\n      this.color = '#fff';\n      this.lines = [];\n      this.popping = false;\n      this.maxRotation = 85;\n      this.audioPlayed = false;\n      this.rotation = Math.floor(Math.random() * (this.maxRotation - this.maxRotation * -1)) + this.maxRotation * -1;\n      this.rotationDirection = 'forward';\n\n      // Populate Lines\n      for (let i = 0; i < popLines; i++) {\n        const tempLine = new createLine();\n        tempLine.bubble = this;\n        tempLine.index = i;\n        this.lines.push(tempLine);\n      }\n      this.resetPosition = function () {\n        this.position = {\n          x: 0,\n          y: 0\n        };\n        this.radius = Math.floor(Math.random() * (101 - 50 + 1)) + 50;\n        this.xOff = Math.random() * canvasElement.width - this.radius;\n        this.yOff = Math.random() * canvasElement.height;\n        this.distanceBetweenWaves = 50 + Math.random() * 40;\n        this.count = canvasElement.height + this.yOff;\n        this.popping = false;\n      };\n\n      // Render the circles\n      this.render = function () {\n        if (this.rotationDirection === 'forward') {\n          if (this.rotation < this.maxRotation) {\n            this.rotation++;\n          } else {\n            this.rotationDirection = 'backward';\n          }\n        } else {\n          if (this.rotation > this.maxRotation * -1) {\n            this.rotation--;\n          } else {\n            this.rotationDirection = 'forward';\n          }\n        }\n        ctx.save();\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate(this.rotation * Math.PI / 180);\n        if (!this.popping) {\n          ctx.beginPath();\n          ctx.strokeStyle = 'white';\n          ctx.lineWidth = 1;\n          ctx.arc(0, 0, this.radius - 3, 0, Math.PI * 1.5, true);\n          ctx.stroke();\n          ctx.beginPath();\n          ctx.arc(0, 0, this.radius, 0, Math.PI * 2, false);\n          ctx.stroke();\n        }\n        ctx.restore();\n\n        // Draw the lines\n        for (let a = 0; a < this.lines.length; a++) {\n          if (this.lines[a].popping) {\n            if (this.lines[a].lineLength < popDistance && !this.lines[a].inversePop) {\n              this.lines[a].popDistance += 0.06;\n            } else {\n              if (this.lines[a].popDistance >= 0) {\n                this.lines[a].inversePop = true;\n                this.lines[a].popDistanceReturn += 1;\n                this.lines[a].popDistance -= 0.03;\n              } else {\n                this.lines[a].resetValues();\n                this.resetPosition();\n              }\n            }\n            this.lines[a].updateValues();\n            this.lines[a].render();\n          }\n        }\n      };\n    }\n\n    // Animation Loop\n    function animate() {\n      // Clear Canvas\n      ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n\n      // Draw Bubbles\n      ctx.beginPath();\n      for (let i = 0; i < bubbles.length; i++) {\n        bubbles[i].position.x = Math.sin(bubbles[i].count / bubbles[i].distanceBetweenWaves) * 50 + bubbles[i].xOff;\n        bubbles[i].position.y = bubbles[i].count;\n        bubbles[i].render();\n        if (bubbles[i].count < 0 - bubbles[i].radius) {\n          bubbles[i].count = canvasElement.height + bubbles[i].yOff;\n        } else {\n          bubbles[i].count -= bubbleSpeed;\n        }\n      }\n\n      // On Bubble Hover\n      for (let i = 0; i < bubbles.length; i++) {\n        if (mouseOffset.x > bubbles[i].position.x - bubbles[i].radius && mouseOffset.x < bubbles[i].position.x + bubbles[i].radius) {\n          if (mouseOffset.y > bubbles[i].position.y - bubbles[i].radius && mouseOffset.y < bubbles[i].position.y + bubbles[i].radius) {\n            for (let a = 0; a < bubbles[i].lines.length; a++) {\n              popDistance = bubbles[i].radius * 0.5;\n              bubbles[i].lines[a].popping = true;\n              bubbles[i].popping = true;\n            }\n          }\n        }\n      }\n      window.requestAnimationFrame(animate);\n    }\n\n    // Populate Bubbles\n    for (let i = 0; i < bubbleCount; i++) {\n      const tempBubble = new createBubble();\n      bubbles.push(tempBubble);\n    }\n\n    // Line Constructor\n    function createLine() {\n      this.lineLength = 0;\n      this.popDistance = 0;\n      this.popDistanceReturn = 0;\n      this.inversePop = false; // When the lines reach full length they need to shrink into the end position\n      this.popping = false;\n      this.resetValues = function () {\n        this.lineLength = 0;\n        this.popDistance = 0;\n        this.popDistanceReturn = 0;\n        this.inversePop = false;\n        this.popping = false;\n        this.updateValues();\n      };\n      this.updateValues = function () {\n        this.x = this.bubble.position.x + (this.bubble.radius + this.popDistanceReturn) * Math.cos(2 * Math.PI * this.index / this.bubble.lines.length);\n        this.y = this.bubble.position.y + (this.bubble.radius + this.popDistanceReturn) * Math.sin(2 * Math.PI * this.index / this.bubble.lines.length);\n        this.lineLength = this.bubble.radius * this.popDistance;\n        this.endX = this.lineLength;\n        this.endY = this.lineLength;\n      };\n      this.render = function () {\n        this.updateValues();\n        ctx.beginPath();\n        ctx.strokeStyle = 'white';\n        ctx.lineWidth = 2;\n        ctx.moveTo(this.x, this.y);\n        if (this.x < this.bubble.position.x) {\n          this.endX = this.lineLength * -1;\n        }\n        if (this.y < this.bubble.position.y) {\n          this.endY = this.lineLength * -1;\n        }\n        if (this.y === this.bubble.position.y) {\n          this.endY = 0;\n        }\n        if (this.x === this.bubble.position.x) {\n          this.endX = 0;\n        }\n        ctx.lineTo(this.x + this.endX, this.y + this.endY);\n        ctx.stroke();\n      };\n    }\n    const mouseMove = e => {\n      mouseOffset.x = e.offsetX;\n      mouseOffset.y = e.offsetY;\n    };\n    canvasElement.addEventListener('mousemove', mouseMove);\n    const handleResize = () => {\n      canvasElement.width = document.body.clientWidth;\n      canvasElement.height = document.body.clientHeight;\n    };\n    window.addEventListener('resize', handleResize);\n\n    // Start the animation loop\n    requestAnimationFrame(animate);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ExitButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"gameArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sky\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          onClick: () => speakText(\"Pop the bubbles!\"),\n          children: \"Pop the bubbles!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: birdsGIF,\n          alt: \"Birds GIF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sea1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sea2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sea3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ship\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sea4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onClick: playPopSound\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(OceanGame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = OceanGame;\nexport default OceanGame;\nvar _c;\n$RefreshReg$(_c, \"OceanGame\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","OceanGame","_s","popAudio","Audio","popSound","playPopSound","loop","play","spawnFish","fishImage","document","createElement","src","fishImages","Math","floor","random","length","className","sea4Div","getElementById","maxX","clientWidth","width","maxY","clientHeight","height","randomX","randomY","style","left","top","appendChild","randomAnimationDuration","setProperty","addEventListener","classList","toggle","animation","remove","fish1","fish2","fish3","fish4","fish5","fish6","i","updateElementsPosition","sea1","sea2","sea3","ship","offsetY","window","pageYOffset","requestAnimationFrame","canvasElement","querySelector","body","ctx","getContext","count","bubbles","bubbleCount","bubbleSpeed","popLines","popDistance","mouseOffset","x","y","createBubble","position","radius","xOff","yOff","distanceBetweenWaves","color","lines","popping","maxRotation","audioPlayed","rotation","rotationDirection","tempLine","createLine","bubble","index","push","resetPosition","render","save","translate","rotate","PI","beginPath","strokeStyle","lineWidth","arc","stroke","restore","a","lineLength","inversePop","popDistanceReturn","resetValues","updateValues","animate","clearRect","sin","tempBubble","cos","endX","endY","moveTo","lineTo","mouseMove","e","offsetX","handleResize","children","ExitButton","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","speakText","birdsGIF","alt","_c","$RefreshReg$"],"sources":["/Users/ewanallison/Desktop/webDev2CW2/SMirror/Front/SMirror/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect } from 'react';\n\n\nconst OceanGame = () => {\n\n  const popAudio = new Audio(popSound);\n\n  // Function to play the popping sound\n  const playPopSound = () => {\n    popAudio.loop = false;\n    popAudio.play();\n  };\n\n    useEffect(() => {\n\n        const spawnFish = () => {\n            const fishImage = document.createElement('img');\n            fishImage.src = fishImages[Math.floor(Math.random() * fishImages.length)];\n            fishImage.className = 'fish'; \n\n            // Generate random position within sea4 div boundaries\n            const sea4Div = document.getElementById('sea4');\n            const maxX = sea4Div.clientWidth - fishImage.width;\n            const maxY = sea4Div.clientHeight - fishImage.height;\n            const randomX = Math.random() * maxX;\n            const randomY = Math.random() * maxY;\n\n            fishImage.style.left = `${randomX}px`;\n            fishImage.style.top = `${randomY}px`;\n            \n            sea4Div.appendChild(fishImage);\n\n            const randomAnimationDuration = `${Math.random() * 20 + 2}s`; \n            fishImage.style.setProperty('--animation-duration', randomAnimationDuration);\n\n            fishImage.addEventListener('animationiteration', () => {\n                fishImage.classList.toggle('flip');\n              });\n\n              fishImage.addEventListener('click', () => {\n\n                fishImage.style.animation = 'fishSwimAway 0.5s linear';\n                fishImage.addEventListener('animationend', () => {\n                fishImage.remove();\n\n                });\n              });\n          };\n      \n          // Array containing imported fish images\n          const fishImages = [fish1, fish2, fish3, fish4, fish5, fish6]; \n      \n          // Populate fish dynamically to the sea4 div\n          for (let i = 0; i < 10; i++) { \n            spawnFish();\n          }\n\n        //Sea parralax effect\n\n        const updateElementsPosition = () => {\n\n        const sea1 = document.getElementById(\"sea1\");\n        const sea2 = document.getElementById(\"sea2\");\n        const sea3 = document.getElementById(\"sea3\");\n        const ship = document.getElementById(\"ship\");\n  \n        if (sea1 && sea2 && sea3 && ship) {\n          const offsetY = window.pageYOffset;\n  \n          sea1.style.top = `${400 + (offsetY - 400) * 0.3}px`;\n          sea2.style.top = `${400 + (offsetY - 400) * 0.2}px`;\n          sea3.style.top = `${400 + (offsetY - 400) * 0.1}px`;\n          ship.style.top = `${50 + (offsetY - 50) * 0.05}px`;\n        }\n        requestAnimationFrame(updateElementsPosition);\n        };\n\n        requestAnimationFrame(updateElementsPosition);\n\n        // Your JavaScript code that should run after component render\n        const canvasElement = document.querySelector('canvas');\n        canvasElement.width = document.body.clientWidth;\n        canvasElement.height = document.body.clientHeight;\n        const ctx = canvasElement.getContext('2d');\n        const count = canvasElement.height;\n        const bubbles = [];\n        const bubbleCount = 50;\n        const bubbleSpeed = 1;\n        const popLines = 6;\n        let popDistance = 40;\n        const mouseOffset = {\n        x: 0,\n        y: 0,\n        };\n\n\n        // Bubble Constructor\n        function createBubble() {\n        this.position = { x: 0, y: 0 };\n        this.radius = Math.floor(Math.random() * (71 - 40 + 1)) + 40;\n        this.xOff = Math.random() * canvasElement.width - this.radius;\n        this.yOff = Math.random() * canvasElement.height;\n        this.distanceBetweenWaves = 100 + Math.random() * 40;\n        this.count = canvasElement.height + this.yOff;\n        this.color = '#fff';\n        this.lines = [];\n        this.popping = false;\n        this.maxRotation = 85;\n        this.audioPlayed = false;\n        this.rotation =\n            Math.floor(Math.random() * (this.maxRotation - this.maxRotation * -1)) +\n            this.maxRotation * -1;\n        this.rotationDirection = 'forward';\n\n        // Populate Lines\n        for (let i = 0; i < popLines; i++) {\n            const tempLine = new createLine();\n            tempLine.bubble = this;\n            tempLine.index = i;\n\n            this.lines.push(tempLine);\n        }\n\n      this.resetPosition = function () {\n        this.position = { x: 0, y: 0 };\n        this.radius = Math.floor(Math.random() * (101 - 50 + 1)) + 50;\n        this.xOff = Math.random() * canvasElement.width - this.radius;\n        this.yOff = Math.random() * canvasElement.height;\n        this.distanceBetweenWaves = 50 + Math.random() * 40;\n        this.count = canvasElement.height + this.yOff;\n        this.popping = false;\n      };\n\n      // Render the circles\n      this.render = function () {\n        if (this.rotationDirection === 'forward') {\n          if (this.rotation < this.maxRotation) {\n            this.rotation++;\n          } else {\n            this.rotationDirection = 'backward';\n          }\n        } else {\n          if (this.rotation > this.maxRotation * -1) {\n            this.rotation--;\n          } else {\n            this.rotationDirection = 'forward';\n          }\n        }\n\n        ctx.save();\n        ctx.translate(this.position.x, this.position.y);\n        ctx.rotate((this.rotation * Math.PI) / 180);\n\n        if (!this.popping) {\n          ctx.beginPath();\n          ctx.strokeStyle = 'white';\n          ctx.lineWidth = 1;\n          ctx.arc(0, 0, this.radius - 3, 0, Math.PI * 1.5, true);\n          ctx.stroke();\n\n          ctx.beginPath();\n          ctx.arc(0, 0, this.radius, 0, Math.PI * 2, false);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n\n        // Draw the lines\n        for (let a = 0; a < this.lines.length; a++) {\n          if (this.lines[a].popping) {\n            if (\n              this.lines[a].lineLength < popDistance &&\n              !this.lines[a].inversePop\n            ) {\n              this.lines[a].popDistance += 0.06;\n            } else {\n              if (this.lines[a].popDistance >= 0) {\n                this.lines[a].inversePop = true;\n                this.lines[a].popDistanceReturn += 1;\n                this.lines[a].popDistance -= 0.03;\n              } else {\n                this.lines[a].resetValues();\n                this.resetPosition();\n              }\n            }\n\n            this.lines[a].updateValues();\n            this.lines[a].render();\n          }\n        }\n      };\n    }\n\n\n    // Animation Loop\n    function animate() {\n        // Clear Canvas\n        ctx.clearRect(0, 0, canvasElement.width, canvasElement.height);\n  \n        // Draw Bubbles\n        ctx.beginPath();\n        for (let i = 0; i < bubbles.length; i++) {\n          bubbles[i].position.x =\n            Math.sin(bubbles[i].count / bubbles[i].distanceBetweenWaves) * 50 +\n            bubbles[i].xOff;\n          bubbles[i].position.y = bubbles[i].count;\n          bubbles[i].render();\n  \n          if (bubbles[i].count < 0 - bubbles[i].radius) {\n            bubbles[i].count = canvasElement.height + bubbles[i].yOff;\n          } else {\n            bubbles[i].count -= bubbleSpeed;\n          }\n        }\n  \n        // On Bubble Hover\n        for (let i = 0; i < bubbles.length; i++) {\n          if (\n            mouseOffset.x > bubbles[i].position.x - bubbles[i].radius &&\n            mouseOffset.x < bubbles[i].position.x + bubbles[i].radius\n          ) {\n            if (\n              mouseOffset.y > bubbles[i].position.y - bubbles[i].radius &&\n              mouseOffset.y < bubbles[i].position.y + bubbles[i].radius\n            ) {\n                \n              for (let a = 0; a < bubbles[i].lines.length; a++) {\n                popDistance = bubbles[i].radius * 0.5;\n                bubbles[i].lines[a].popping = true;\n                bubbles[i].popping = true;\n              }\n            }\n          }\n        }\n  \n        window.requestAnimationFrame(animate);\n      }\n\n    // Populate Bubbles\n    for (let i = 0; i < bubbleCount; i++) {\n      const tempBubble = new createBubble();\n\n      bubbles.push(tempBubble);\n    }\n\n    // Line Constructor\n    function createLine() {\n      this.lineLength = 0;\n      this.popDistance = 0;\n      this.popDistanceReturn = 0;\n      this.inversePop = false; // When the lines reach full length they need to shrink into the end position\n      this.popping = false;\n\n      this.resetValues = function () {\n        this.lineLength = 0;\n        this.popDistance = 0;\n        this.popDistanceReturn = 0;\n        this.inversePop = false;\n        this.popping = false;\n\n        this.updateValues();\n      };\n\n      this.updateValues = function () {\n        this.x =\n          this.bubble.position.x +\n          (this.bubble.radius + this.popDistanceReturn) *\n            Math.cos((2 * Math.PI * this.index) / this.bubble.lines.length);\n        this.y =\n          this.bubble.position.y +\n          (this.bubble.radius + this.popDistanceReturn) *\n            Math.sin((2 * Math.PI * this.index) / this.bubble.lines.length);\n        this.lineLength = this.bubble.radius * this.popDistance;\n        this.endX = this.lineLength;\n        this.endY = this.lineLength;\n      };\n\n      this.render = function () {\n        this.updateValues();\n        ctx.beginPath();\n        ctx.strokeStyle = 'white';\n        ctx.lineWidth = 2;\n        ctx.moveTo(this.x, this.y);\n        if (this.x < this.bubble.position.x) {\n          this.endX = this.lineLength * -1;\n        }\n        if (this.y < this.bubble.position.y) {\n          this.endY = this.lineLength * -1;\n        }\n        if (this.y === this.bubble.position.y) {\n          this.endY = 0;\n        }\n        if (this.x === this.bubble.position.x) {\n          this.endX = 0;\n        }\n        ctx.lineTo(this.x + this.endX, this.y + this.endY);\n        ctx.stroke();\n      };\n    }\n\n    const mouseMove = e => {\n      mouseOffset.x = e.offsetX;\n      mouseOffset.y = e.offsetY;\n    };\n\n    canvasElement.addEventListener('mousemove', mouseMove);\n\n    const handleResize = () => {\n      canvasElement.width = document.body.clientWidth;\n      canvasElement.height = document.body.clientHeight;\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    // Start the animation loop\n    requestAnimationFrame(animate);\n\n\n  }, []);\n\n  return (\n    <>\n      <ExitButton />\n      <section className=\"gameArea\">\n\n        <div id=\"sky\">\n            <h1 onClick={() => speakText(\"Pop the bubbles!\")}>Pop the bubbles!</h1>\n            <img src={birdsGIF} alt=\"Birds GIF\"/>\n        </div>\n\n        <div id=\"sea1\"></div>\n\n        <div id=\"sea2\"></div>\n\n        <div id=\"sea3\"></div>\n\n        <div id=\"ship\"></div>\n\n        <div id=\"sea4\">\n\n        </div>\n\n        <canvas onClick={playPopSound}></canvas>\n\n      </section>\n    </>\n  );\n};\n\nexport default OceanGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}